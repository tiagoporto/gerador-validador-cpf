{
  "compilerOptions": {
    /* Basic Options */
    "target": "ESNext", // Specify ECMAScript target version: 'ES3' (default)
    "module": "ESNext", // Specify module code generation
    // "lib": [],                             // Specify library files to be included in the compilation.
    // "allowJs": true,                       // Allow javascript files to be compiled.
    // "checkJs": true,                       // Report errors in .js files.
    "jsx": "react-jsxdev", // Specify JSX code generation
    // "declaration": true,                   // Generates corresponding '.d.ts' file.
    // "declarationMap": true,                // Generates a sourcemap for each corresponding '.d.ts' file.
    // "outDir": "./dist/",                   // Redirect output structure to the directory.
    // "composite": true,                     // Enable project compilation
    // "removeComments": true,                // Do not emit comments to output.
    // "noEmit": true,                        // Do not emit outputs.
    // "importHelpers": true,                 // Import emit helpers from 'tslib'.
    // "downlevelIteration": true,            // Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'.
    "skipLibCheck": true,
    "isolatedModules": true, // Transpile each file as a separate module (similar to 'ts.transpileModule').

    /* Strict Type-Checking Options */
    "strict": true, // Enable all strict type-checking options.
    // "noImplicitAny": true,                 // Raise error on expressions and declarations with an implied 'any' type.
    // "strictNullChecks": true,              // Enable strict null checks.
    // "strictFunctionTypes": true,           // Enable strict checking of function types.
    // "strictPropertyInitialization": true,  // Enable strict checking of property initialization in classes.
    // "noImplicitThis": true,                // Raise error on 'this' expressions with an implied 'any' type.
    // "alwaysStrict": true,                  // Parse in strict mode and emit "use strict" for each source file.

    /* Additional Checks */
    // "noUnusedLocals": true,                // Report errors on unused locals.
    // "noUnusedParameters": true,            // Report errors on unused parameters.
    // "noImplicitReturns": true,             // Report error when not all code paths in function return a value.
    // "noFallthroughCasesInSwitch": true,    // Report errors for fallthrough cases in switch statement.

    /* Module Resolution Options */
    "resolveJsonModule": true,
    "moduleResolution": "Node", // Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6).
    "baseUrl": "src", // Base directory to resolve non-absolute module names.
    "paths": {
      "@i18n/*": ["site/locales/en/*"],
      "!!@i18nResources/*": ["site/locales/*"]
    }, // A series of entries which re-map imports to lookup locations relative to the 'baseUrl'.
    // "rootDir": ".",
    // "typeRoots": ["node_modules/@types", "@types"], // List of folders to include type definitions from.
    // "types": [], // Type declaration files to be included in compilation.
    "allowSyntheticDefaultImports": true, // Allow default imports from modules with no default export. This does not affect code emit, just typechecking.
    "esModuleInterop": true, // Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'.
    // "preserveSymlinks": true,              // Do not resolve the real path of symlinks.

    /* Source Map Options */
    "sourceMap": true, // Generates corresponding '.map' file.
    // "sourceRoot": "./",                    // Specify the location where debugger should locate TypeScript files instead of source locations.
    // "mapRoot": "./",                       // Specify the location where debugger should locate map files instead of generated locations.
    // "inlineSourceMap": true,               // Emit a single file with source maps instead of having a separate file.
    // "inlineSources": true,                 // Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set.

    /* Experimental Options */
    // "experimentalDecorators": true,        // Enables experimental support for ES7 decorators.
    // "emitDecoratorMetadata": true,         // Enables experimental support for emitting type metadata for decorators.

    /* Advanced Options */
    // "declarationDir": "dist" // Output directory for generated declaration files.
    "forceConsistentCasingInFileNames": true
  }
  // "include": ["src/**/*"],
  // "exclude": ["node_modules", "dist"]
}
